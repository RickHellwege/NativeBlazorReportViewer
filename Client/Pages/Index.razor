@page "/"

@using BlazorFinancePortfolio.Models
@using BlazorFinancePortfolio.Services
@using BlazorFinancePortfolio.Client.Components.StocksChart
@using BlazorFinancePortfolio.Client.Components.StocksGrid

@inject StocksListService StocksListService


    <div class="container">
        @if (ShowChart)
        {
            <TopAreaContainer SelectedStock="@SelectedStock" />
        }

        <div class="text-primary text-right mt-2">
            <span class="collapse-expand-button" @onclick="@( () => ShowChart = !ShowChart )">
                @( ShowChart ? "Hide Chart" : "Show Chart" )
                <TelerikSvgIcon Icon="@( ShowChart ? SvgIcon.ChevronUp : SvgIcon.ChevronDown )" />
            </span>
        </div>

    </div>



<div class="d-flex justify-content-center mx-0">
    <div class="row">
        @if (SelectedStock != null)
        {
            <div class="selected-stock-badge d-flex align-items-center badge-@( SelectedStock.ChangePercentage > 0 ? "positive" : "negative" )-value">
                <span>@SelectedStock.Symbol&nbsp;</span><span>@SelectedStock.Price</span>
            </div>
        }
    </div>
</div>
<div class="container">
    <StocksGrid @bind-SelectedStock="@SelectedStock"></StocksGrid>
</div>

<div class="container">
<ReportViewer ServiceType="@ReportViewerServiceType.REST"
              ServiceUrl="https://demos.telerik.com/reporting/api/reports"
              @bind-ReportSource="@ReportSource"
              @bind-ScaleMode="@ScaleMode"
              @bind-ViewMode="@ViewMode"
              @bind-ParametersAreaVisible="@ParametersAreaVisible"
              @bind-DocumentMapVisible="@DocumentMapVisible"
              @bind-Scale="@Scale">
</ReportViewer>
</div>

@code {
    Stock SelectedStock { get; set; }
    bool ShowChart { get; set; } = true;

    public ScaleMode ScaleMode { get; set; } = ScaleMode.Specific;
    public ViewMode ViewMode { get; set; } = ViewMode.Interactive;
    public bool ParametersAreaVisible { get; set; }
    public bool DocumentMapVisible { get; set; }
    public double Scale { get; set; } = 1.0;

    public ReportSourceOptions ReportSource { get; set; } = new ReportSourceOptions("Report Catalog.trdx",
        new Dictionary<string, object>
        {
            // Add parameters if applicable
        });
}

